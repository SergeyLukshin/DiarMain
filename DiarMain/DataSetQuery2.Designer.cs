//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DiarMain {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetQuery2")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetQuery2 : global::System.Data.DataSet {
        
        private QEquipmentRecordDataTable tableQEquipmentRecord;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetQuery2() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSetQuery2(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["QEquipmentRecord"] != null)) {
                    base.Tables.Add(new QEquipmentRecordDataTable(ds.Tables["QEquipmentRecord"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QEquipmentRecordDataTable QEquipmentRecord {
            get {
                return this.tableQEquipmentRecord;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetQuery2 cln = ((DataSetQuery2)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["QEquipmentRecord"] != null)) {
                    base.Tables.Add(new QEquipmentRecordDataTable(ds.Tables["QEquipmentRecord"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableQEquipmentRecord = ((QEquipmentRecordDataTable)(base.Tables["QEquipmentRecord"]));
            if ((initTable == true)) {
                if ((this.tableQEquipmentRecord != null)) {
                    this.tableQEquipmentRecord.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetQuery2";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetQuery2.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableQEquipmentRecord = new QEquipmentRecordDataTable();
            base.Tables.Add(this.tableQEquipmentRecord);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeQEquipmentRecord() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetQuery2 ds = new DataSetQuery2();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void QEquipmentRecordRowChangeEventHandler(object sender, QEquipmentRecordRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class QEquipmentRecordDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnEquipmentID;
            
            private global::System.Data.DataColumn columnSubstationID;
            
            private global::System.Data.DataColumn columnEquipmentKindID;
            
            private global::System.Data.DataColumn columnEquipmentTypeID;
            
            private global::System.Data.DataColumn columnManufacturerID;
            
            private global::System.Data.DataColumn columnConstructionType;
            
            private global::System.Data.DataColumn columnCoolingSystemTypeID;
            
            private global::System.Data.DataColumn columnEquipmentName;
            
            private global::System.Data.DataColumn columnEquipmentNumber;
            
            private global::System.Data.DataColumn columnCreateYear;
            
            private global::System.Data.DataColumn columnUseBeginYear;
            
            private global::System.Data.DataColumn columnNominalVoltageLow;
            
            private global::System.Data.DataColumn columnNominalVoltageMiddle;
            
            private global::System.Data.DataColumn columnNominalVoltageHigh;
            
            private global::System.Data.DataColumn columnNominalVoltageNeitral;
            
            private global::System.Data.DataColumn columnNominalPower;
            
            private global::System.Data.DataColumn columnProjectLifeTime;
            
            private global::System.Data.DataColumn columnActualLifeTime;
            
            private global::System.Data.DataColumn columnLastWorkoverYear;
            
            private global::System.Data.DataColumn columnLastTechnicalServiceYear;
            
            private global::System.Data.DataColumn columnTechnicalServiceDocument;
            
            private global::System.Data.DataColumn columnTechnicalServiceConclusion;
            
            private global::System.Data.DataColumn columnNextTechnicalServiceYear;
            
            private global::System.Data.DataColumn columnTechnicalServiceCount;
            
            private global::System.Data.DataColumn columnEquipmentNote;
            
            private global::System.Data.DataColumn columnReadOnly;
            
            private global::System.Data.DataColumn columnProtectionOilTypeID;
            
            private global::System.Data.DataColumn columnInputIDHighA;
            
            private global::System.Data.DataColumn columnInputIDHighB;
            
            private global::System.Data.DataColumn columnInputIDHighC;
            
            private global::System.Data.DataColumn columnInputIDMiddleA;
            
            private global::System.Data.DataColumn columnInputIDMiddleB;
            
            private global::System.Data.DataColumn columnInputIDMiddleC;
            
            private global::System.Data.DataColumn columnInputIDNeutral;
            
            private global::System.Data.DataColumn columnRPNCnt;
            
            private global::System.Data.DataColumn columnRPNVoltage;
            
            private global::System.Data.DataColumn columnRPNTypeID;
            
            private global::System.Data.DataColumn columnRPNKind;
            
            private global::System.Data.DataColumn columnRPNNumber;
            
            private global::System.Data.DataColumn columnRPNNumber2;
            
            private global::System.Data.DataColumn columnRPNNumber3;
            
            private global::System.Data.DataColumn columnImage;
            
            private global::System.Data.DataColumn columnEquipmentClassID;
            
            private global::System.Data.DataColumn columnNominalCurrent;
            
            private global::System.Data.DataColumn columnSwitchDriveTypeID;
            
            private global::System.Data.DataColumn columnBranchName;
            
            private global::System.Data.DataColumn columnSubjectName;
            
            private global::System.Data.DataColumn columnSubjectID;
            
            private global::System.Data.DataColumn columnBranchID;
            
            private global::System.Data.DataColumn columnInputKindHighA;
            
            private global::System.Data.DataColumn columnInputNameHighA;
            
            private global::System.Data.DataColumn columnInputTypeIDHighA;
            
            private global::System.Data.DataColumn columnInputManufacturerIDHighA;
            
            private global::System.Data.DataColumn columnInputNumberHighA;
            
            private global::System.Data.DataColumn columnInputCreateYearHighA;
            
            private global::System.Data.DataColumn columnInputUseBeginYearHighA;
            
            private global::System.Data.DataColumn columnInputKindHighB;
            
            private global::System.Data.DataColumn columnInputNameHighB;
            
            private global::System.Data.DataColumn columnInputTypeIDHighB;
            
            private global::System.Data.DataColumn columnInputManufacturerIDHighB;
            
            private global::System.Data.DataColumn columnInputNumberHighB;
            
            private global::System.Data.DataColumn columnInputCreateYearHighB;
            
            private global::System.Data.DataColumn columnInputUseBeginYearHighB;
            
            private global::System.Data.DataColumn columnInputKindHighC;
            
            private global::System.Data.DataColumn columnInputNameHighC;
            
            private global::System.Data.DataColumn columnInputTypeIDHighC;
            
            private global::System.Data.DataColumn columnInputManufacturerIDHighC;
            
            private global::System.Data.DataColumn columnInputNumberHighC;
            
            private global::System.Data.DataColumn columnInputCreateYearHighC;
            
            private global::System.Data.DataColumn columnInputUseBeginYearHighC;
            
            private global::System.Data.DataColumn columnInputKindMiddleA;
            
            private global::System.Data.DataColumn columnInputNameMiddleA;
            
            private global::System.Data.DataColumn columnInputTypeIDMiddleA;
            
            private global::System.Data.DataColumn columnInputManufacturerIDMiddleA;
            
            private global::System.Data.DataColumn columnInputNumberMiddleA;
            
            private global::System.Data.DataColumn columnInputCreateYearMiddleA;
            
            private global::System.Data.DataColumn columnInputUseBeginYearMiddleA;
            
            private global::System.Data.DataColumn columnInputKindMiddleB;
            
            private global::System.Data.DataColumn columnInputNameMiddleB;
            
            private global::System.Data.DataColumn columnInputTypeIDMiddleB;
            
            private global::System.Data.DataColumn columnInputManufacturerIDMiddleB;
            
            private global::System.Data.DataColumn columnInputNumberMiddleB;
            
            private global::System.Data.DataColumn columnInputCreateYearMiddleB;
            
            private global::System.Data.DataColumn columnInputUseBeginYearMiddleB;
            
            private global::System.Data.DataColumn columnInputKindMiddleC;
            
            private global::System.Data.DataColumn columnInputNameMiddleC;
            
            private global::System.Data.DataColumn columnInputTypeIDMiddleC;
            
            private global::System.Data.DataColumn columnInputManufacturerIDMiddleC;
            
            private global::System.Data.DataColumn columnInputNumberMiddleC;
            
            private global::System.Data.DataColumn columnInputCreateYearMiddleC;
            
            private global::System.Data.DataColumn columnInputUseBeginYearMiddleC;
            
            private global::System.Data.DataColumn columnInputKindNeutral;
            
            private global::System.Data.DataColumn columnInputNameNeutral;
            
            private global::System.Data.DataColumn columnInputTypeIDNeutral;
            
            private global::System.Data.DataColumn columnInputManufacturerIDNeutral;
            
            private global::System.Data.DataColumn columnInputNumberNeutral;
            
            private global::System.Data.DataColumn columnInputCreateYearNeutral;
            
            private global::System.Data.DataColumn columnInputUseBeginYearNeutral;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QEquipmentRecordDataTable() {
                this.TableName = "QEquipmentRecord";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QEquipmentRecordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected QEquipmentRecordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EquipmentIDColumn {
                get {
                    return this.columnEquipmentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubstationIDColumn {
                get {
                    return this.columnSubstationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EquipmentKindIDColumn {
                get {
                    return this.columnEquipmentKindID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EquipmentTypeIDColumn {
                get {
                    return this.columnEquipmentTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ManufacturerIDColumn {
                get {
                    return this.columnManufacturerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ConstructionTypeColumn {
                get {
                    return this.columnConstructionType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CoolingSystemTypeIDColumn {
                get {
                    return this.columnCoolingSystemTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EquipmentNameColumn {
                get {
                    return this.columnEquipmentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EquipmentNumberColumn {
                get {
                    return this.columnEquipmentNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreateYearColumn {
                get {
                    return this.columnCreateYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UseBeginYearColumn {
                get {
                    return this.columnUseBeginYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalVoltageLowColumn {
                get {
                    return this.columnNominalVoltageLow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalVoltageMiddleColumn {
                get {
                    return this.columnNominalVoltageMiddle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalVoltageHighColumn {
                get {
                    return this.columnNominalVoltageHigh;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalVoltageNeitralColumn {
                get {
                    return this.columnNominalVoltageNeitral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalPowerColumn {
                get {
                    return this.columnNominalPower;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProjectLifeTimeColumn {
                get {
                    return this.columnProjectLifeTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ActualLifeTimeColumn {
                get {
                    return this.columnActualLifeTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastWorkoverYearColumn {
                get {
                    return this.columnLastWorkoverYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastTechnicalServiceYearColumn {
                get {
                    return this.columnLastTechnicalServiceYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TechnicalServiceDocumentColumn {
                get {
                    return this.columnTechnicalServiceDocument;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TechnicalServiceConclusionColumn {
                get {
                    return this.columnTechnicalServiceConclusion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NextTechnicalServiceYearColumn {
                get {
                    return this.columnNextTechnicalServiceYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TechnicalServiceCountColumn {
                get {
                    return this.columnTechnicalServiceCount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EquipmentNoteColumn {
                get {
                    return this.columnEquipmentNote;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReadOnlyColumn {
                get {
                    return this.columnReadOnly;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProtectionOilTypeIDColumn {
                get {
                    return this.columnProtectionOilTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputIDHighAColumn {
                get {
                    return this.columnInputIDHighA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputIDHighBColumn {
                get {
                    return this.columnInputIDHighB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputIDHighCColumn {
                get {
                    return this.columnInputIDHighC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputIDMiddleAColumn {
                get {
                    return this.columnInputIDMiddleA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputIDMiddleBColumn {
                get {
                    return this.columnInputIDMiddleB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputIDMiddleCColumn {
                get {
                    return this.columnInputIDMiddleC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputIDNeutralColumn {
                get {
                    return this.columnInputIDNeutral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPNCntColumn {
                get {
                    return this.columnRPNCnt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPNVoltageColumn {
                get {
                    return this.columnRPNVoltage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPNTypeIDColumn {
                get {
                    return this.columnRPNTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPNKindColumn {
                get {
                    return this.columnRPNKind;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPNNumberColumn {
                get {
                    return this.columnRPNNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPNNumber2Column {
                get {
                    return this.columnRPNNumber2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RPNNumber3Column {
                get {
                    return this.columnRPNNumber3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImageColumn {
                get {
                    return this.columnImage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EquipmentClassIDColumn {
                get {
                    return this.columnEquipmentClassID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NominalCurrentColumn {
                get {
                    return this.columnNominalCurrent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SwitchDriveTypeIDColumn {
                get {
                    return this.columnSwitchDriveTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BranchNameColumn {
                get {
                    return this.columnBranchName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectNameColumn {
                get {
                    return this.columnSubjectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubjectIDColumn {
                get {
                    return this.columnSubjectID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BranchIDColumn {
                get {
                    return this.columnBranchID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputKindHighAColumn {
                get {
                    return this.columnInputKindHighA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNameHighAColumn {
                get {
                    return this.columnInputNameHighA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputTypeIDHighAColumn {
                get {
                    return this.columnInputTypeIDHighA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputManufacturerIDHighAColumn {
                get {
                    return this.columnInputManufacturerIDHighA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNumberHighAColumn {
                get {
                    return this.columnInputNumberHighA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputCreateYearHighAColumn {
                get {
                    return this.columnInputCreateYearHighA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputUseBeginYearHighAColumn {
                get {
                    return this.columnInputUseBeginYearHighA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputKindHighBColumn {
                get {
                    return this.columnInputKindHighB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNameHighBColumn {
                get {
                    return this.columnInputNameHighB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputTypeIDHighBColumn {
                get {
                    return this.columnInputTypeIDHighB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputManufacturerIDHighBColumn {
                get {
                    return this.columnInputManufacturerIDHighB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNumberHighBColumn {
                get {
                    return this.columnInputNumberHighB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputCreateYearHighBColumn {
                get {
                    return this.columnInputCreateYearHighB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputUseBeginYearHighBColumn {
                get {
                    return this.columnInputUseBeginYearHighB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputKindHighCColumn {
                get {
                    return this.columnInputKindHighC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNameHighCColumn {
                get {
                    return this.columnInputNameHighC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputTypeIDHighCColumn {
                get {
                    return this.columnInputTypeIDHighC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputManufacturerIDHighCColumn {
                get {
                    return this.columnInputManufacturerIDHighC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNumberHighCColumn {
                get {
                    return this.columnInputNumberHighC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputCreateYearHighCColumn {
                get {
                    return this.columnInputCreateYearHighC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputUseBeginYearHighCColumn {
                get {
                    return this.columnInputUseBeginYearHighC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputKindMiddleAColumn {
                get {
                    return this.columnInputKindMiddleA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNameMiddleAColumn {
                get {
                    return this.columnInputNameMiddleA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputTypeIDMiddleAColumn {
                get {
                    return this.columnInputTypeIDMiddleA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputManufacturerIDMiddleAColumn {
                get {
                    return this.columnInputManufacturerIDMiddleA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNumberMiddleAColumn {
                get {
                    return this.columnInputNumberMiddleA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputCreateYearMiddleAColumn {
                get {
                    return this.columnInputCreateYearMiddleA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputUseBeginYearMiddleAColumn {
                get {
                    return this.columnInputUseBeginYearMiddleA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputKindMiddleBColumn {
                get {
                    return this.columnInputKindMiddleB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNameMiddleBColumn {
                get {
                    return this.columnInputNameMiddleB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputTypeIDMiddleBColumn {
                get {
                    return this.columnInputTypeIDMiddleB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputManufacturerIDMiddleBColumn {
                get {
                    return this.columnInputManufacturerIDMiddleB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNumberMiddleBColumn {
                get {
                    return this.columnInputNumberMiddleB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputCreateYearMiddleBColumn {
                get {
                    return this.columnInputCreateYearMiddleB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputUseBeginYearMiddleBColumn {
                get {
                    return this.columnInputUseBeginYearMiddleB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputKindMiddleCColumn {
                get {
                    return this.columnInputKindMiddleC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNameMiddleCColumn {
                get {
                    return this.columnInputNameMiddleC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputTypeIDMiddleCColumn {
                get {
                    return this.columnInputTypeIDMiddleC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputManufacturerIDMiddleCColumn {
                get {
                    return this.columnInputManufacturerIDMiddleC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNumberMiddleCColumn {
                get {
                    return this.columnInputNumberMiddleC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputCreateYearMiddleCColumn {
                get {
                    return this.columnInputCreateYearMiddleC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputUseBeginYearMiddleCColumn {
                get {
                    return this.columnInputUseBeginYearMiddleC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputKindNeutralColumn {
                get {
                    return this.columnInputKindNeutral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNameNeutralColumn {
                get {
                    return this.columnInputNameNeutral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputTypeIDNeutralColumn {
                get {
                    return this.columnInputTypeIDNeutral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputManufacturerIDNeutralColumn {
                get {
                    return this.columnInputManufacturerIDNeutral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputNumberNeutralColumn {
                get {
                    return this.columnInputNumberNeutral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputCreateYearNeutralColumn {
                get {
                    return this.columnInputCreateYearNeutral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InputUseBeginYearNeutralColumn {
                get {
                    return this.columnInputUseBeginYearNeutral;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QEquipmentRecordRow this[int index] {
                get {
                    return ((QEquipmentRecordRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QEquipmentRecordRowChangeEventHandler QEquipmentRecordRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QEquipmentRecordRowChangeEventHandler QEquipmentRecordRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QEquipmentRecordRowChangeEventHandler QEquipmentRecordRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event QEquipmentRecordRowChangeEventHandler QEquipmentRecordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddQEquipmentRecordRow(QEquipmentRecordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QEquipmentRecordRow AddQEquipmentRecordRow(
                        long SubstationID, 
                        long EquipmentKindID, 
                        long EquipmentTypeID, 
                        long ManufacturerID, 
                        long ConstructionType, 
                        long CoolingSystemTypeID, 
                        string EquipmentName, 
                        string EquipmentNumber, 
                        long CreateYear, 
                        long UseBeginYear, 
                        long NominalVoltageLow, 
                        long NominalVoltageMiddle, 
                        long NominalVoltageHigh, 
                        long NominalVoltageNeitral, 
                        decimal NominalPower, 
                        long ProjectLifeTime, 
                        long ActualLifeTime, 
                        long LastWorkoverYear, 
                        long LastTechnicalServiceYear, 
                        string TechnicalServiceDocument, 
                        string TechnicalServiceConclusion, 
                        long NextTechnicalServiceYear, 
                        long TechnicalServiceCount, 
                        string EquipmentNote, 
                        long ReadOnly, 
                        long ProtectionOilTypeID, 
                        long InputIDHighA, 
                        long InputIDHighB, 
                        long InputIDHighC, 
                        long InputIDMiddleA, 
                        long InputIDMiddleB, 
                        long InputIDMiddleC, 
                        long InputIDNeutral, 
                        long RPNCnt, 
                        long RPNVoltage, 
                        long RPNTypeID, 
                        long RPNKind, 
                        string RPNNumber, 
                        string RPNNumber2, 
                        string RPNNumber3, 
                        byte[] Image, 
                        long EquipmentClassID, 
                        long NominalCurrent, 
                        long SwitchDriveTypeID, 
                        string BranchName, 
                        string SubjectName, 
                        long SubjectID, 
                        long BranchID, 
                        long InputKindHighA, 
                        string InputNameHighA, 
                        long InputTypeIDHighA, 
                        long InputManufacturerIDHighA, 
                        string InputNumberHighA, 
                        long InputCreateYearHighA, 
                        long InputUseBeginYearHighA, 
                        long InputKindHighB, 
                        string InputNameHighB, 
                        long InputTypeIDHighB, 
                        long InputManufacturerIDHighB, 
                        string InputNumberHighB, 
                        long InputCreateYearHighB, 
                        long InputUseBeginYearHighB, 
                        long InputKindHighC, 
                        string InputNameHighC, 
                        long InputTypeIDHighC, 
                        long InputManufacturerIDHighC, 
                        string InputNumberHighC, 
                        long InputCreateYearHighC, 
                        long InputUseBeginYearHighC, 
                        long InputKindMiddleA, 
                        string InputNameMiddleA, 
                        long InputTypeIDMiddleA, 
                        long InputManufacturerIDMiddleA, 
                        string InputNumberMiddleA, 
                        long InputCreateYearMiddleA, 
                        long InputUseBeginYearMiddleA, 
                        long InputKindMiddleB, 
                        string InputNameMiddleB, 
                        long InputTypeIDMiddleB, 
                        long InputManufacturerIDMiddleB, 
                        string InputNumberMiddleB, 
                        long InputCreateYearMiddleB, 
                        long InputUseBeginYearMiddleB, 
                        long InputKindMiddleC, 
                        string InputNameMiddleC, 
                        long InputTypeIDMiddleC, 
                        long InputManufacturerIDMiddleC, 
                        string InputNumberMiddleC, 
                        long InputCreateYearMiddleC, 
                        long InputUseBeginYearMiddleC, 
                        long InputKindNeutral, 
                        string InputNameNeutral, 
                        long InputTypeIDNeutral, 
                        long InputManufacturerIDNeutral, 
                        string InputNumberNeutral, 
                        long InputCreateYearNeutral, 
                        long InputUseBeginYearNeutral) {
                QEquipmentRecordRow rowQEquipmentRecordRow = ((QEquipmentRecordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        SubstationID,
                        EquipmentKindID,
                        EquipmentTypeID,
                        ManufacturerID,
                        ConstructionType,
                        CoolingSystemTypeID,
                        EquipmentName,
                        EquipmentNumber,
                        CreateYear,
                        UseBeginYear,
                        NominalVoltageLow,
                        NominalVoltageMiddle,
                        NominalVoltageHigh,
                        NominalVoltageNeitral,
                        NominalPower,
                        ProjectLifeTime,
                        ActualLifeTime,
                        LastWorkoverYear,
                        LastTechnicalServiceYear,
                        TechnicalServiceDocument,
                        TechnicalServiceConclusion,
                        NextTechnicalServiceYear,
                        TechnicalServiceCount,
                        EquipmentNote,
                        ReadOnly,
                        ProtectionOilTypeID,
                        InputIDHighA,
                        InputIDHighB,
                        InputIDHighC,
                        InputIDMiddleA,
                        InputIDMiddleB,
                        InputIDMiddleC,
                        InputIDNeutral,
                        RPNCnt,
                        RPNVoltage,
                        RPNTypeID,
                        RPNKind,
                        RPNNumber,
                        RPNNumber2,
                        RPNNumber3,
                        Image,
                        EquipmentClassID,
                        NominalCurrent,
                        SwitchDriveTypeID,
                        BranchName,
                        SubjectName,
                        SubjectID,
                        BranchID,
                        InputKindHighA,
                        InputNameHighA,
                        InputTypeIDHighA,
                        InputManufacturerIDHighA,
                        InputNumberHighA,
                        InputCreateYearHighA,
                        InputUseBeginYearHighA,
                        InputKindHighB,
                        InputNameHighB,
                        InputTypeIDHighB,
                        InputManufacturerIDHighB,
                        InputNumberHighB,
                        InputCreateYearHighB,
                        InputUseBeginYearHighB,
                        InputKindHighC,
                        InputNameHighC,
                        InputTypeIDHighC,
                        InputManufacturerIDHighC,
                        InputNumberHighC,
                        InputCreateYearHighC,
                        InputUseBeginYearHighC,
                        InputKindMiddleA,
                        InputNameMiddleA,
                        InputTypeIDMiddleA,
                        InputManufacturerIDMiddleA,
                        InputNumberMiddleA,
                        InputCreateYearMiddleA,
                        InputUseBeginYearMiddleA,
                        InputKindMiddleB,
                        InputNameMiddleB,
                        InputTypeIDMiddleB,
                        InputManufacturerIDMiddleB,
                        InputNumberMiddleB,
                        InputCreateYearMiddleB,
                        InputUseBeginYearMiddleB,
                        InputKindMiddleC,
                        InputNameMiddleC,
                        InputTypeIDMiddleC,
                        InputManufacturerIDMiddleC,
                        InputNumberMiddleC,
                        InputCreateYearMiddleC,
                        InputUseBeginYearMiddleC,
                        InputKindNeutral,
                        InputNameNeutral,
                        InputTypeIDNeutral,
                        InputManufacturerIDNeutral,
                        InputNumberNeutral,
                        InputCreateYearNeutral,
                        InputUseBeginYearNeutral};
                rowQEquipmentRecordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowQEquipmentRecordRow);
                return rowQEquipmentRecordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QEquipmentRecordRow FindByEquipmentID(long EquipmentID) {
                return ((QEquipmentRecordRow)(this.Rows.Find(new object[] {
                            EquipmentID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                QEquipmentRecordDataTable cln = ((QEquipmentRecordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new QEquipmentRecordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnEquipmentID = base.Columns["EquipmentID"];
                this.columnSubstationID = base.Columns["SubstationID"];
                this.columnEquipmentKindID = base.Columns["EquipmentKindID"];
                this.columnEquipmentTypeID = base.Columns["EquipmentTypeID"];
                this.columnManufacturerID = base.Columns["ManufacturerID"];
                this.columnConstructionType = base.Columns["ConstructionType"];
                this.columnCoolingSystemTypeID = base.Columns["CoolingSystemTypeID"];
                this.columnEquipmentName = base.Columns["EquipmentName"];
                this.columnEquipmentNumber = base.Columns["EquipmentNumber"];
                this.columnCreateYear = base.Columns["CreateYear"];
                this.columnUseBeginYear = base.Columns["UseBeginYear"];
                this.columnNominalVoltageLow = base.Columns["NominalVoltageLow"];
                this.columnNominalVoltageMiddle = base.Columns["NominalVoltageMiddle"];
                this.columnNominalVoltageHigh = base.Columns["NominalVoltageHigh"];
                this.columnNominalVoltageNeitral = base.Columns["NominalVoltageNeitral"];
                this.columnNominalPower = base.Columns["NominalPower"];
                this.columnProjectLifeTime = base.Columns["ProjectLifeTime"];
                this.columnActualLifeTime = base.Columns["ActualLifeTime"];
                this.columnLastWorkoverYear = base.Columns["LastWorkoverYear"];
                this.columnLastTechnicalServiceYear = base.Columns["LastTechnicalServiceYear"];
                this.columnTechnicalServiceDocument = base.Columns["TechnicalServiceDocument"];
                this.columnTechnicalServiceConclusion = base.Columns["TechnicalServiceConclusion"];
                this.columnNextTechnicalServiceYear = base.Columns["NextTechnicalServiceYear"];
                this.columnTechnicalServiceCount = base.Columns["TechnicalServiceCount"];
                this.columnEquipmentNote = base.Columns["EquipmentNote"];
                this.columnReadOnly = base.Columns["ReadOnly"];
                this.columnProtectionOilTypeID = base.Columns["ProtectionOilTypeID"];
                this.columnInputIDHighA = base.Columns["InputIDHighA"];
                this.columnInputIDHighB = base.Columns["InputIDHighB"];
                this.columnInputIDHighC = base.Columns["InputIDHighC"];
                this.columnInputIDMiddleA = base.Columns["InputIDMiddleA"];
                this.columnInputIDMiddleB = base.Columns["InputIDMiddleB"];
                this.columnInputIDMiddleC = base.Columns["InputIDMiddleC"];
                this.columnInputIDNeutral = base.Columns["InputIDNeutral"];
                this.columnRPNCnt = base.Columns["RPNCnt"];
                this.columnRPNVoltage = base.Columns["RPNVoltage"];
                this.columnRPNTypeID = base.Columns["RPNTypeID"];
                this.columnRPNKind = base.Columns["RPNKind"];
                this.columnRPNNumber = base.Columns["RPNNumber"];
                this.columnRPNNumber2 = base.Columns["RPNNumber2"];
                this.columnRPNNumber3 = base.Columns["RPNNumber3"];
                this.columnImage = base.Columns["Image"];
                this.columnEquipmentClassID = base.Columns["EquipmentClassID"];
                this.columnNominalCurrent = base.Columns["NominalCurrent"];
                this.columnSwitchDriveTypeID = base.Columns["SwitchDriveTypeID"];
                this.columnBranchName = base.Columns["BranchName"];
                this.columnSubjectName = base.Columns["SubjectName"];
                this.columnSubjectID = base.Columns["SubjectID"];
                this.columnBranchID = base.Columns["BranchID"];
                this.columnInputKindHighA = base.Columns["InputKindHighA"];
                this.columnInputNameHighA = base.Columns["InputNameHighA"];
                this.columnInputTypeIDHighA = base.Columns["InputTypeIDHighA"];
                this.columnInputManufacturerIDHighA = base.Columns["InputManufacturerIDHighA"];
                this.columnInputNumberHighA = base.Columns["InputNumberHighA"];
                this.columnInputCreateYearHighA = base.Columns["InputCreateYearHighA"];
                this.columnInputUseBeginYearHighA = base.Columns["InputUseBeginYearHighA"];
                this.columnInputKindHighB = base.Columns["InputKindHighB"];
                this.columnInputNameHighB = base.Columns["InputNameHighB"];
                this.columnInputTypeIDHighB = base.Columns["InputTypeIDHighB"];
                this.columnInputManufacturerIDHighB = base.Columns["InputManufacturerIDHighB"];
                this.columnInputNumberHighB = base.Columns["InputNumberHighB"];
                this.columnInputCreateYearHighB = base.Columns["InputCreateYearHighB"];
                this.columnInputUseBeginYearHighB = base.Columns["InputUseBeginYearHighB"];
                this.columnInputKindHighC = base.Columns["InputKindHighC"];
                this.columnInputNameHighC = base.Columns["InputNameHighC"];
                this.columnInputTypeIDHighC = base.Columns["InputTypeIDHighC"];
                this.columnInputManufacturerIDHighC = base.Columns["InputManufacturerIDHighC"];
                this.columnInputNumberHighC = base.Columns["InputNumberHighC"];
                this.columnInputCreateYearHighC = base.Columns["InputCreateYearHighC"];
                this.columnInputUseBeginYearHighC = base.Columns["InputUseBeginYearHighC"];
                this.columnInputKindMiddleA = base.Columns["InputKindMiddleA"];
                this.columnInputNameMiddleA = base.Columns["InputNameMiddleA"];
                this.columnInputTypeIDMiddleA = base.Columns["InputTypeIDMiddleA"];
                this.columnInputManufacturerIDMiddleA = base.Columns["InputManufacturerIDMiddleA"];
                this.columnInputNumberMiddleA = base.Columns["InputNumberMiddleA"];
                this.columnInputCreateYearMiddleA = base.Columns["InputCreateYearMiddleA"];
                this.columnInputUseBeginYearMiddleA = base.Columns["InputUseBeginYearMiddleA"];
                this.columnInputKindMiddleB = base.Columns["InputKindMiddleB"];
                this.columnInputNameMiddleB = base.Columns["InputNameMiddleB"];
                this.columnInputTypeIDMiddleB = base.Columns["InputTypeIDMiddleB"];
                this.columnInputManufacturerIDMiddleB = base.Columns["InputManufacturerIDMiddleB"];
                this.columnInputNumberMiddleB = base.Columns["InputNumberMiddleB"];
                this.columnInputCreateYearMiddleB = base.Columns["InputCreateYearMiddleB"];
                this.columnInputUseBeginYearMiddleB = base.Columns["InputUseBeginYearMiddleB"];
                this.columnInputKindMiddleC = base.Columns["InputKindMiddleC"];
                this.columnInputNameMiddleC = base.Columns["InputNameMiddleC"];
                this.columnInputTypeIDMiddleC = base.Columns["InputTypeIDMiddleC"];
                this.columnInputManufacturerIDMiddleC = base.Columns["InputManufacturerIDMiddleC"];
                this.columnInputNumberMiddleC = base.Columns["InputNumberMiddleC"];
                this.columnInputCreateYearMiddleC = base.Columns["InputCreateYearMiddleC"];
                this.columnInputUseBeginYearMiddleC = base.Columns["InputUseBeginYearMiddleC"];
                this.columnInputKindNeutral = base.Columns["InputKindNeutral"];
                this.columnInputNameNeutral = base.Columns["InputNameNeutral"];
                this.columnInputTypeIDNeutral = base.Columns["InputTypeIDNeutral"];
                this.columnInputManufacturerIDNeutral = base.Columns["InputManufacturerIDNeutral"];
                this.columnInputNumberNeutral = base.Columns["InputNumberNeutral"];
                this.columnInputCreateYearNeutral = base.Columns["InputCreateYearNeutral"];
                this.columnInputUseBeginYearNeutral = base.Columns["InputUseBeginYearNeutral"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnEquipmentID = new global::System.Data.DataColumn("EquipmentID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquipmentID);
                this.columnSubstationID = new global::System.Data.DataColumn("SubstationID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstationID);
                this.columnEquipmentKindID = new global::System.Data.DataColumn("EquipmentKindID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquipmentKindID);
                this.columnEquipmentTypeID = new global::System.Data.DataColumn("EquipmentTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquipmentTypeID);
                this.columnManufacturerID = new global::System.Data.DataColumn("ManufacturerID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturerID);
                this.columnConstructionType = new global::System.Data.DataColumn("ConstructionType", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConstructionType);
                this.columnCoolingSystemTypeID = new global::System.Data.DataColumn("CoolingSystemTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCoolingSystemTypeID);
                this.columnEquipmentName = new global::System.Data.DataColumn("EquipmentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquipmentName);
                this.columnEquipmentNumber = new global::System.Data.DataColumn("EquipmentNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquipmentNumber);
                this.columnCreateYear = new global::System.Data.DataColumn("CreateYear", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreateYear);
                this.columnUseBeginYear = new global::System.Data.DataColumn("UseBeginYear", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseBeginYear);
                this.columnNominalVoltageLow = new global::System.Data.DataColumn("NominalVoltageLow", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalVoltageLow);
                this.columnNominalVoltageMiddle = new global::System.Data.DataColumn("NominalVoltageMiddle", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalVoltageMiddle);
                this.columnNominalVoltageHigh = new global::System.Data.DataColumn("NominalVoltageHigh", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalVoltageHigh);
                this.columnNominalVoltageNeitral = new global::System.Data.DataColumn("NominalVoltageNeitral", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalVoltageNeitral);
                this.columnNominalPower = new global::System.Data.DataColumn("NominalPower", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalPower);
                this.columnProjectLifeTime = new global::System.Data.DataColumn("ProjectLifeTime", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProjectLifeTime);
                this.columnActualLifeTime = new global::System.Data.DataColumn("ActualLifeTime", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActualLifeTime);
                this.columnLastWorkoverYear = new global::System.Data.DataColumn("LastWorkoverYear", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastWorkoverYear);
                this.columnLastTechnicalServiceYear = new global::System.Data.DataColumn("LastTechnicalServiceYear", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastTechnicalServiceYear);
                this.columnTechnicalServiceDocument = new global::System.Data.DataColumn("TechnicalServiceDocument", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnicalServiceDocument);
                this.columnTechnicalServiceConclusion = new global::System.Data.DataColumn("TechnicalServiceConclusion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnicalServiceConclusion);
                this.columnNextTechnicalServiceYear = new global::System.Data.DataColumn("NextTechnicalServiceYear", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNextTechnicalServiceYear);
                this.columnTechnicalServiceCount = new global::System.Data.DataColumn("TechnicalServiceCount", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTechnicalServiceCount);
                this.columnEquipmentNote = new global::System.Data.DataColumn("EquipmentNote", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquipmentNote);
                this.columnReadOnly = new global::System.Data.DataColumn("ReadOnly", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReadOnly);
                this.columnProtectionOilTypeID = new global::System.Data.DataColumn("ProtectionOilTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProtectionOilTypeID);
                this.columnInputIDHighA = new global::System.Data.DataColumn("InputIDHighA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputIDHighA);
                this.columnInputIDHighB = new global::System.Data.DataColumn("InputIDHighB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputIDHighB);
                this.columnInputIDHighC = new global::System.Data.DataColumn("InputIDHighC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputIDHighC);
                this.columnInputIDMiddleA = new global::System.Data.DataColumn("InputIDMiddleA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputIDMiddleA);
                this.columnInputIDMiddleB = new global::System.Data.DataColumn("InputIDMiddleB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputIDMiddleB);
                this.columnInputIDMiddleC = new global::System.Data.DataColumn("InputIDMiddleC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputIDMiddleC);
                this.columnInputIDNeutral = new global::System.Data.DataColumn("InputIDNeutral", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputIDNeutral);
                this.columnRPNCnt = new global::System.Data.DataColumn("RPNCnt", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPNCnt);
                this.columnRPNVoltage = new global::System.Data.DataColumn("RPNVoltage", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPNVoltage);
                this.columnRPNTypeID = new global::System.Data.DataColumn("RPNTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPNTypeID);
                this.columnRPNKind = new global::System.Data.DataColumn("RPNKind", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPNKind);
                this.columnRPNNumber = new global::System.Data.DataColumn("RPNNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPNNumber);
                this.columnRPNNumber2 = new global::System.Data.DataColumn("RPNNumber2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPNNumber2);
                this.columnRPNNumber3 = new global::System.Data.DataColumn("RPNNumber3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRPNNumber3);
                this.columnImage = new global::System.Data.DataColumn("Image", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImage);
                this.columnEquipmentClassID = new global::System.Data.DataColumn("EquipmentClassID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquipmentClassID);
                this.columnNominalCurrent = new global::System.Data.DataColumn("NominalCurrent", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNominalCurrent);
                this.columnSwitchDriveTypeID = new global::System.Data.DataColumn("SwitchDriveTypeID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSwitchDriveTypeID);
                this.columnBranchName = new global::System.Data.DataColumn("BranchName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchName);
                this.columnSubjectName = new global::System.Data.DataColumn("SubjectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectName);
                this.columnSubjectID = new global::System.Data.DataColumn("SubjectID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubjectID);
                this.columnBranchID = new global::System.Data.DataColumn("BranchID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBranchID);
                this.columnInputKindHighA = new global::System.Data.DataColumn("InputKindHighA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputKindHighA);
                this.columnInputNameHighA = new global::System.Data.DataColumn("InputNameHighA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNameHighA);
                this.columnInputTypeIDHighA = new global::System.Data.DataColumn("InputTypeIDHighA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputTypeIDHighA);
                this.columnInputManufacturerIDHighA = new global::System.Data.DataColumn("InputManufacturerIDHighA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputManufacturerIDHighA);
                this.columnInputNumberHighA = new global::System.Data.DataColumn("InputNumberHighA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNumberHighA);
                this.columnInputCreateYearHighA = new global::System.Data.DataColumn("InputCreateYearHighA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputCreateYearHighA);
                this.columnInputUseBeginYearHighA = new global::System.Data.DataColumn("InputUseBeginYearHighA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputUseBeginYearHighA);
                this.columnInputKindHighB = new global::System.Data.DataColumn("InputKindHighB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputKindHighB);
                this.columnInputNameHighB = new global::System.Data.DataColumn("InputNameHighB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNameHighB);
                this.columnInputTypeIDHighB = new global::System.Data.DataColumn("InputTypeIDHighB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputTypeIDHighB);
                this.columnInputManufacturerIDHighB = new global::System.Data.DataColumn("InputManufacturerIDHighB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputManufacturerIDHighB);
                this.columnInputNumberHighB = new global::System.Data.DataColumn("InputNumberHighB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNumberHighB);
                this.columnInputCreateYearHighB = new global::System.Data.DataColumn("InputCreateYearHighB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputCreateYearHighB);
                this.columnInputUseBeginYearHighB = new global::System.Data.DataColumn("InputUseBeginYearHighB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputUseBeginYearHighB);
                this.columnInputKindHighC = new global::System.Data.DataColumn("InputKindHighC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputKindHighC);
                this.columnInputNameHighC = new global::System.Data.DataColumn("InputNameHighC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNameHighC);
                this.columnInputTypeIDHighC = new global::System.Data.DataColumn("InputTypeIDHighC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputTypeIDHighC);
                this.columnInputManufacturerIDHighC = new global::System.Data.DataColumn("InputManufacturerIDHighC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputManufacturerIDHighC);
                this.columnInputNumberHighC = new global::System.Data.DataColumn("InputNumberHighC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNumberHighC);
                this.columnInputCreateYearHighC = new global::System.Data.DataColumn("InputCreateYearHighC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputCreateYearHighC);
                this.columnInputUseBeginYearHighC = new global::System.Data.DataColumn("InputUseBeginYearHighC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputUseBeginYearHighC);
                this.columnInputKindMiddleA = new global::System.Data.DataColumn("InputKindMiddleA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputKindMiddleA);
                this.columnInputNameMiddleA = new global::System.Data.DataColumn("InputNameMiddleA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNameMiddleA);
                this.columnInputTypeIDMiddleA = new global::System.Data.DataColumn("InputTypeIDMiddleA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputTypeIDMiddleA);
                this.columnInputManufacturerIDMiddleA = new global::System.Data.DataColumn("InputManufacturerIDMiddleA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputManufacturerIDMiddleA);
                this.columnInputNumberMiddleA = new global::System.Data.DataColumn("InputNumberMiddleA", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNumberMiddleA);
                this.columnInputCreateYearMiddleA = new global::System.Data.DataColumn("InputCreateYearMiddleA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputCreateYearMiddleA);
                this.columnInputUseBeginYearMiddleA = new global::System.Data.DataColumn("InputUseBeginYearMiddleA", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputUseBeginYearMiddleA);
                this.columnInputKindMiddleB = new global::System.Data.DataColumn("InputKindMiddleB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputKindMiddleB);
                this.columnInputNameMiddleB = new global::System.Data.DataColumn("InputNameMiddleB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNameMiddleB);
                this.columnInputTypeIDMiddleB = new global::System.Data.DataColumn("InputTypeIDMiddleB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputTypeIDMiddleB);
                this.columnInputManufacturerIDMiddleB = new global::System.Data.DataColumn("InputManufacturerIDMiddleB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputManufacturerIDMiddleB);
                this.columnInputNumberMiddleB = new global::System.Data.DataColumn("InputNumberMiddleB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNumberMiddleB);
                this.columnInputCreateYearMiddleB = new global::System.Data.DataColumn("InputCreateYearMiddleB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputCreateYearMiddleB);
                this.columnInputUseBeginYearMiddleB = new global::System.Data.DataColumn("InputUseBeginYearMiddleB", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputUseBeginYearMiddleB);
                this.columnInputKindMiddleC = new global::System.Data.DataColumn("InputKindMiddleC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputKindMiddleC);
                this.columnInputNameMiddleC = new global::System.Data.DataColumn("InputNameMiddleC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNameMiddleC);
                this.columnInputTypeIDMiddleC = new global::System.Data.DataColumn("InputTypeIDMiddleC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputTypeIDMiddleC);
                this.columnInputManufacturerIDMiddleC = new global::System.Data.DataColumn("InputManufacturerIDMiddleC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputManufacturerIDMiddleC);
                this.columnInputNumberMiddleC = new global::System.Data.DataColumn("InputNumberMiddleC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNumberMiddleC);
                this.columnInputCreateYearMiddleC = new global::System.Data.DataColumn("InputCreateYearMiddleC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputCreateYearMiddleC);
                this.columnInputUseBeginYearMiddleC = new global::System.Data.DataColumn("InputUseBeginYearMiddleC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputUseBeginYearMiddleC);
                this.columnInputKindNeutral = new global::System.Data.DataColumn("InputKindNeutral", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputKindNeutral);
                this.columnInputNameNeutral = new global::System.Data.DataColumn("InputNameNeutral", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNameNeutral);
                this.columnInputTypeIDNeutral = new global::System.Data.DataColumn("InputTypeIDNeutral", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputTypeIDNeutral);
                this.columnInputManufacturerIDNeutral = new global::System.Data.DataColumn("InputManufacturerIDNeutral", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputManufacturerIDNeutral);
                this.columnInputNumberNeutral = new global::System.Data.DataColumn("InputNumberNeutral", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputNumberNeutral);
                this.columnInputCreateYearNeutral = new global::System.Data.DataColumn("InputCreateYearNeutral", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputCreateYearNeutral);
                this.columnInputUseBeginYearNeutral = new global::System.Data.DataColumn("InputUseBeginYearNeutral", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInputUseBeginYearNeutral);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEquipmentID}, true));
                this.columnEquipmentID.AutoIncrement = true;
                this.columnEquipmentID.AutoIncrementSeed = -1;
                this.columnEquipmentID.AutoIncrementStep = -1;
                this.columnEquipmentID.AllowDBNull = false;
                this.columnEquipmentID.Unique = true;
                this.columnEquipmentName.AllowDBNull = false;
                this.columnEquipmentName.DefaultValue = ((string)(""));
                this.columnEquipmentName.MaxLength = 128;
                this.columnEquipmentNumber.AllowDBNull = false;
                this.columnEquipmentNumber.DefaultValue = ((string)(""));
                this.columnEquipmentNumber.MaxLength = 128;
                this.columnTechnicalServiceDocument.AllowDBNull = false;
                this.columnTechnicalServiceDocument.DefaultValue = ((string)(""));
                this.columnTechnicalServiceDocument.MaxLength = 512;
                this.columnTechnicalServiceConclusion.AllowDBNull = false;
                this.columnTechnicalServiceConclusion.DefaultValue = ((string)(""));
                this.columnTechnicalServiceConclusion.MaxLength = 512;
                this.columnEquipmentNote.AllowDBNull = false;
                this.columnEquipmentNote.DefaultValue = ((string)(""));
                this.columnEquipmentNote.MaxLength = 512;
                this.columnReadOnly.AllowDBNull = false;
                this.columnReadOnly.DefaultValue = ((long)(0));
                this.columnRPNNumber.MaxLength = 128;
                this.columnRPNNumber2.MaxLength = 128;
                this.columnRPNNumber3.MaxLength = 128;
                this.columnBranchName.MaxLength = 128;
                this.columnSubjectName.MaxLength = 128;
                this.columnInputNameHighA.MaxLength = 128;
                this.columnInputNumberHighA.MaxLength = 128;
                this.columnInputNameHighB.MaxLength = 128;
                this.columnInputNumberHighB.MaxLength = 128;
                this.columnInputNameHighC.MaxLength = 128;
                this.columnInputNumberHighC.MaxLength = 128;
                this.columnInputNameMiddleA.MaxLength = 128;
                this.columnInputNumberMiddleA.MaxLength = 128;
                this.columnInputNameMiddleB.MaxLength = 128;
                this.columnInputNumberMiddleB.MaxLength = 128;
                this.columnInputNameMiddleC.MaxLength = 128;
                this.columnInputNumberMiddleC.MaxLength = 128;
                this.columnInputNameNeutral.MaxLength = 128;
                this.columnInputNumberNeutral.MaxLength = 128;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QEquipmentRecordRow NewQEquipmentRecordRow() {
                return ((QEquipmentRecordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new QEquipmentRecordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(QEquipmentRecordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QEquipmentRecordRowChanged != null)) {
                    this.QEquipmentRecordRowChanged(this, new QEquipmentRecordRowChangeEvent(((QEquipmentRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QEquipmentRecordRowChanging != null)) {
                    this.QEquipmentRecordRowChanging(this, new QEquipmentRecordRowChangeEvent(((QEquipmentRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QEquipmentRecordRowDeleted != null)) {
                    this.QEquipmentRecordRowDeleted(this, new QEquipmentRecordRowChangeEvent(((QEquipmentRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QEquipmentRecordRowDeleting != null)) {
                    this.QEquipmentRecordRowDeleting(this, new QEquipmentRecordRowChangeEvent(((QEquipmentRecordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveQEquipmentRecordRow(QEquipmentRecordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetQuery2 ds = new DataSetQuery2();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "QEquipmentRecordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class QEquipmentRecordRow : global::System.Data.DataRow {
            
            private QEquipmentRecordDataTable tableQEquipmentRecord;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal QEquipmentRecordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableQEquipmentRecord = ((QEquipmentRecordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long EquipmentID {
                get {
                    return ((long)(this[this.tableQEquipmentRecord.EquipmentIDColumn]));
                }
                set {
                    this[this.tableQEquipmentRecord.EquipmentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long SubstationID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.SubstationIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubstationID\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.SubstationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long EquipmentKindID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.EquipmentKindIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EquipmentKindID\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.EquipmentKindIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long EquipmentTypeID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.EquipmentTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EquipmentTypeID\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.EquipmentTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ManufacturerID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.ManufacturerIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ManufacturerID\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.ManufacturerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ConstructionType {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.ConstructionTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ConstructionType\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.ConstructionTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CoolingSystemTypeID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.CoolingSystemTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CoolingSystemTypeID\' in table \'QEquipmentRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.CoolingSystemTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EquipmentName {
                get {
                    return ((string)(this[this.tableQEquipmentRecord.EquipmentNameColumn]));
                }
                set {
                    this[this.tableQEquipmentRecord.EquipmentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EquipmentNumber {
                get {
                    return ((string)(this[this.tableQEquipmentRecord.EquipmentNumberColumn]));
                }
                set {
                    this[this.tableQEquipmentRecord.EquipmentNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long CreateYear {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.CreateYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreateYear\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.CreateYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long UseBeginYear {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.UseBeginYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UseBeginYear\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.UseBeginYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long NominalVoltageLow {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.NominalVoltageLowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalVoltageLow\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.NominalVoltageLowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long NominalVoltageMiddle {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.NominalVoltageMiddleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalVoltageMiddle\' in table \'QEquipmentRecord\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.NominalVoltageMiddleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long NominalVoltageHigh {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.NominalVoltageHighColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalVoltageHigh\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.NominalVoltageHighColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long NominalVoltageNeitral {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.NominalVoltageNeitralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalVoltageNeitral\' in table \'QEquipmentRecord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.NominalVoltageNeitralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal NominalPower {
                get {
                    try {
                        return ((decimal)(this[this.tableQEquipmentRecord.NominalPowerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalPower\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.NominalPowerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ProjectLifeTime {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.ProjectLifeTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProjectLifeTime\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.ProjectLifeTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ActualLifeTime {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.ActualLifeTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ActualLifeTime\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.ActualLifeTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long LastWorkoverYear {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.LastWorkoverYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastWorkoverYear\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.LastWorkoverYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long LastTechnicalServiceYear {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.LastTechnicalServiceYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LastTechnicalServiceYear\' in table \'QEquipmentRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.LastTechnicalServiceYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TechnicalServiceDocument {
                get {
                    return ((string)(this[this.tableQEquipmentRecord.TechnicalServiceDocumentColumn]));
                }
                set {
                    this[this.tableQEquipmentRecord.TechnicalServiceDocumentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TechnicalServiceConclusion {
                get {
                    return ((string)(this[this.tableQEquipmentRecord.TechnicalServiceConclusionColumn]));
                }
                set {
                    this[this.tableQEquipmentRecord.TechnicalServiceConclusionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long NextTechnicalServiceYear {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.NextTechnicalServiceYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NextTechnicalServiceYear\' in table \'QEquipmentRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.NextTechnicalServiceYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long TechnicalServiceCount {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.TechnicalServiceCountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TechnicalServiceCount\' in table \'QEquipmentRecord\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.TechnicalServiceCountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EquipmentNote {
                get {
                    return ((string)(this[this.tableQEquipmentRecord.EquipmentNoteColumn]));
                }
                set {
                    this[this.tableQEquipmentRecord.EquipmentNoteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ReadOnly {
                get {
                    return ((long)(this[this.tableQEquipmentRecord.ReadOnlyColumn]));
                }
                set {
                    this[this.tableQEquipmentRecord.ReadOnlyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long ProtectionOilTypeID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.ProtectionOilTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProtectionOilTypeID\' in table \'QEquipmentRecord\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.ProtectionOilTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputIDHighA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputIDHighAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputIDHighA\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputIDHighAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputIDHighB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputIDHighBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputIDHighB\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputIDHighBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputIDHighC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputIDHighCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputIDHighC\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputIDHighCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputIDMiddleA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputIDMiddleAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputIDMiddleA\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputIDMiddleAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputIDMiddleB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputIDMiddleBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputIDMiddleB\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputIDMiddleBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputIDMiddleC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputIDMiddleCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputIDMiddleC\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputIDMiddleCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputIDNeutral {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputIDNeutralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputIDNeutral\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputIDNeutralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RPNCnt {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.RPNCntColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPNCnt\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.RPNCntColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RPNVoltage {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.RPNVoltageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPNVoltage\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.RPNVoltageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RPNTypeID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.RPNTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPNTypeID\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.RPNTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long RPNKind {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.RPNKindColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPNKind\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.RPNKindColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RPNNumber {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.RPNNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPNNumber\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.RPNNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RPNNumber2 {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.RPNNumber2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPNNumber2\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.RPNNumber2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RPNNumber3 {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.RPNNumber3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RPNNumber3\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.RPNNumber3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Image {
                get {
                    try {
                        return ((byte[])(this[this.tableQEquipmentRecord.ImageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Image\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.ImageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long EquipmentClassID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.EquipmentClassIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EquipmentClassID\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.EquipmentClassIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long NominalCurrent {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.NominalCurrentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NominalCurrent\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.NominalCurrentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long SwitchDriveTypeID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.SwitchDriveTypeIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SwitchDriveTypeID\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.SwitchDriveTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BranchName {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.BranchNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchName\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.BranchNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SubjectName {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.SubjectNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectName\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.SubjectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long SubjectID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.SubjectIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SubjectID\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.SubjectIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long BranchID {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.BranchIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BranchID\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.BranchIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputKindHighA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputKindHighAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputKindHighA\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputKindHighAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNameHighA {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNameHighAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNameHighA\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNameHighAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputTypeIDHighA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputTypeIDHighAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputTypeIDHighA\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputTypeIDHighAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputManufacturerIDHighA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputManufacturerIDHighAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputManufacturerIDHighA\' in table \'QEquipmentRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputManufacturerIDHighAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNumberHighA {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNumberHighAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNumberHighA\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNumberHighAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputCreateYearHighA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputCreateYearHighAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputCreateYearHighA\' in table \'QEquipmentRecord\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputCreateYearHighAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputUseBeginYearHighA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputUseBeginYearHighAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputUseBeginYearHighA\' in table \'QEquipmentRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputUseBeginYearHighAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputKindHighB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputKindHighBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputKindHighB\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputKindHighBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNameHighB {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNameHighBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNameHighB\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNameHighBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputTypeIDHighB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputTypeIDHighBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputTypeIDHighB\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputTypeIDHighBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputManufacturerIDHighB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputManufacturerIDHighBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputManufacturerIDHighB\' in table \'QEquipmentRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputManufacturerIDHighBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNumberHighB {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNumberHighBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNumberHighB\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNumberHighBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputCreateYearHighB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputCreateYearHighBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputCreateYearHighB\' in table \'QEquipmentRecord\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputCreateYearHighBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputUseBeginYearHighB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputUseBeginYearHighBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputUseBeginYearHighB\' in table \'QEquipmentRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputUseBeginYearHighBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputKindHighC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputKindHighCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputKindHighC\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputKindHighCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNameHighC {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNameHighCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNameHighC\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNameHighCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputTypeIDHighC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputTypeIDHighCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputTypeIDHighC\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputTypeIDHighCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputManufacturerIDHighC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputManufacturerIDHighCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputManufacturerIDHighC\' in table \'QEquipmentRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputManufacturerIDHighCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNumberHighC {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNumberHighCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNumberHighC\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNumberHighCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputCreateYearHighC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputCreateYearHighCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputCreateYearHighC\' in table \'QEquipmentRecord\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputCreateYearHighCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputUseBeginYearHighC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputUseBeginYearHighCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputUseBeginYearHighC\' in table \'QEquipmentRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputUseBeginYearHighCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputKindMiddleA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputKindMiddleAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputKindMiddleA\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputKindMiddleAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNameMiddleA {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNameMiddleAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNameMiddleA\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNameMiddleAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputTypeIDMiddleA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputTypeIDMiddleAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputTypeIDMiddleA\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputTypeIDMiddleAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputManufacturerIDMiddleA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputManufacturerIDMiddleAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputManufacturerIDMiddleA\' in table \'QEquipmentRecord\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputManufacturerIDMiddleAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNumberMiddleA {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNumberMiddleAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNumberMiddleA\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNumberMiddleAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputCreateYearMiddleA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputCreateYearMiddleAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputCreateYearMiddleA\' in table \'QEquipmentRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputCreateYearMiddleAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputUseBeginYearMiddleA {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputUseBeginYearMiddleAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputUseBeginYearMiddleA\' in table \'QEquipmentRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputUseBeginYearMiddleAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputKindMiddleB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputKindMiddleBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputKindMiddleB\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputKindMiddleBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNameMiddleB {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNameMiddleBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNameMiddleB\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNameMiddleBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputTypeIDMiddleB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputTypeIDMiddleBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputTypeIDMiddleB\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputTypeIDMiddleBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputManufacturerIDMiddleB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputManufacturerIDMiddleBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputManufacturerIDMiddleB\' in table \'QEquipmentRecord\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputManufacturerIDMiddleBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNumberMiddleB {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNumberMiddleBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNumberMiddleB\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNumberMiddleBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputCreateYearMiddleB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputCreateYearMiddleBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputCreateYearMiddleB\' in table \'QEquipmentRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputCreateYearMiddleBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputUseBeginYearMiddleB {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputUseBeginYearMiddleBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputUseBeginYearMiddleB\' in table \'QEquipmentRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputUseBeginYearMiddleBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputKindMiddleC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputKindMiddleCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputKindMiddleC\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputKindMiddleCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNameMiddleC {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNameMiddleCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNameMiddleC\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNameMiddleCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputTypeIDMiddleC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputTypeIDMiddleCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputTypeIDMiddleC\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputTypeIDMiddleCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputManufacturerIDMiddleC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputManufacturerIDMiddleCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputManufacturerIDMiddleC\' in table \'QEquipmentRecord\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputManufacturerIDMiddleCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNumberMiddleC {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNumberMiddleCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNumberMiddleC\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNumberMiddleCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputCreateYearMiddleC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputCreateYearMiddleCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputCreateYearMiddleC\' in table \'QEquipmentRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputCreateYearMiddleCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputUseBeginYearMiddleC {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputUseBeginYearMiddleCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputUseBeginYearMiddleC\' in table \'QEquipmentRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputUseBeginYearMiddleCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputKindNeutral {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputKindNeutralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputKindNeutral\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputKindNeutralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNameNeutral {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNameNeutralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNameNeutral\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNameNeutralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputTypeIDNeutral {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputTypeIDNeutralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputTypeIDNeutral\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputTypeIDNeutralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputManufacturerIDNeutral {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputManufacturerIDNeutralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputManufacturerIDNeutral\' in table \'QEquipmentRecord\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputManufacturerIDNeutralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InputNumberNeutral {
                get {
                    try {
                        return ((string)(this[this.tableQEquipmentRecord.InputNumberNeutralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputNumberNeutral\' in table \'QEquipmentRecord\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputNumberNeutralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputCreateYearNeutral {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputCreateYearNeutralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputCreateYearNeutral\' in table \'QEquipmentRecord\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputCreateYearNeutralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long InputUseBeginYearNeutral {
                get {
                    try {
                        return ((long)(this[this.tableQEquipmentRecord.InputUseBeginYearNeutralColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InputUseBeginYearNeutral\' in table \'QEquipmentRecord\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableQEquipmentRecord.InputUseBeginYearNeutralColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubstationIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.SubstationIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubstationIDNull() {
                this[this.tableQEquipmentRecord.SubstationIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEquipmentKindIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.EquipmentKindIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEquipmentKindIDNull() {
                this[this.tableQEquipmentRecord.EquipmentKindIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEquipmentTypeIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.EquipmentTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEquipmentTypeIDNull() {
                this[this.tableQEquipmentRecord.EquipmentTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsManufacturerIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.ManufacturerIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetManufacturerIDNull() {
                this[this.tableQEquipmentRecord.ManufacturerIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConstructionTypeNull() {
                return this.IsNull(this.tableQEquipmentRecord.ConstructionTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConstructionTypeNull() {
                this[this.tableQEquipmentRecord.ConstructionTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCoolingSystemTypeIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.CoolingSystemTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCoolingSystemTypeIDNull() {
                this[this.tableQEquipmentRecord.CoolingSystemTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreateYearNull() {
                return this.IsNull(this.tableQEquipmentRecord.CreateYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreateYearNull() {
                this[this.tableQEquipmentRecord.CreateYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUseBeginYearNull() {
                return this.IsNull(this.tableQEquipmentRecord.UseBeginYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUseBeginYearNull() {
                this[this.tableQEquipmentRecord.UseBeginYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalVoltageLowNull() {
                return this.IsNull(this.tableQEquipmentRecord.NominalVoltageLowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalVoltageLowNull() {
                this[this.tableQEquipmentRecord.NominalVoltageLowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalVoltageMiddleNull() {
                return this.IsNull(this.tableQEquipmentRecord.NominalVoltageMiddleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalVoltageMiddleNull() {
                this[this.tableQEquipmentRecord.NominalVoltageMiddleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalVoltageHighNull() {
                return this.IsNull(this.tableQEquipmentRecord.NominalVoltageHighColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalVoltageHighNull() {
                this[this.tableQEquipmentRecord.NominalVoltageHighColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalVoltageNeitralNull() {
                return this.IsNull(this.tableQEquipmentRecord.NominalVoltageNeitralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalVoltageNeitralNull() {
                this[this.tableQEquipmentRecord.NominalVoltageNeitralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalPowerNull() {
                return this.IsNull(this.tableQEquipmentRecord.NominalPowerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalPowerNull() {
                this[this.tableQEquipmentRecord.NominalPowerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProjectLifeTimeNull() {
                return this.IsNull(this.tableQEquipmentRecord.ProjectLifeTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProjectLifeTimeNull() {
                this[this.tableQEquipmentRecord.ProjectLifeTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActualLifeTimeNull() {
                return this.IsNull(this.tableQEquipmentRecord.ActualLifeTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActualLifeTimeNull() {
                this[this.tableQEquipmentRecord.ActualLifeTimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastWorkoverYearNull() {
                return this.IsNull(this.tableQEquipmentRecord.LastWorkoverYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastWorkoverYearNull() {
                this[this.tableQEquipmentRecord.LastWorkoverYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastTechnicalServiceYearNull() {
                return this.IsNull(this.tableQEquipmentRecord.LastTechnicalServiceYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastTechnicalServiceYearNull() {
                this[this.tableQEquipmentRecord.LastTechnicalServiceYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNextTechnicalServiceYearNull() {
                return this.IsNull(this.tableQEquipmentRecord.NextTechnicalServiceYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNextTechnicalServiceYearNull() {
                this[this.tableQEquipmentRecord.NextTechnicalServiceYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTechnicalServiceCountNull() {
                return this.IsNull(this.tableQEquipmentRecord.TechnicalServiceCountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTechnicalServiceCountNull() {
                this[this.tableQEquipmentRecord.TechnicalServiceCountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProtectionOilTypeIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.ProtectionOilTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProtectionOilTypeIDNull() {
                this[this.tableQEquipmentRecord.ProtectionOilTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputIDHighANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputIDHighAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputIDHighANull() {
                this[this.tableQEquipmentRecord.InputIDHighAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputIDHighBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputIDHighBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputIDHighBNull() {
                this[this.tableQEquipmentRecord.InputIDHighBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputIDHighCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputIDHighCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputIDHighCNull() {
                this[this.tableQEquipmentRecord.InputIDHighCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputIDMiddleANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputIDMiddleAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputIDMiddleANull() {
                this[this.tableQEquipmentRecord.InputIDMiddleAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputIDMiddleBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputIDMiddleBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputIDMiddleBNull() {
                this[this.tableQEquipmentRecord.InputIDMiddleBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputIDMiddleCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputIDMiddleCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputIDMiddleCNull() {
                this[this.tableQEquipmentRecord.InputIDMiddleCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputIDNeutralNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputIDNeutralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputIDNeutralNull() {
                this[this.tableQEquipmentRecord.InputIDNeutralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPNCntNull() {
                return this.IsNull(this.tableQEquipmentRecord.RPNCntColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPNCntNull() {
                this[this.tableQEquipmentRecord.RPNCntColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPNVoltageNull() {
                return this.IsNull(this.tableQEquipmentRecord.RPNVoltageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPNVoltageNull() {
                this[this.tableQEquipmentRecord.RPNVoltageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPNTypeIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.RPNTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPNTypeIDNull() {
                this[this.tableQEquipmentRecord.RPNTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPNKindNull() {
                return this.IsNull(this.tableQEquipmentRecord.RPNKindColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPNKindNull() {
                this[this.tableQEquipmentRecord.RPNKindColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPNNumberNull() {
                return this.IsNull(this.tableQEquipmentRecord.RPNNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPNNumberNull() {
                this[this.tableQEquipmentRecord.RPNNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPNNumber2Null() {
                return this.IsNull(this.tableQEquipmentRecord.RPNNumber2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPNNumber2Null() {
                this[this.tableQEquipmentRecord.RPNNumber2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRPNNumber3Null() {
                return this.IsNull(this.tableQEquipmentRecord.RPNNumber3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRPNNumber3Null() {
                this[this.tableQEquipmentRecord.RPNNumber3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImageNull() {
                return this.IsNull(this.tableQEquipmentRecord.ImageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImageNull() {
                this[this.tableQEquipmentRecord.ImageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEquipmentClassIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.EquipmentClassIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEquipmentClassIDNull() {
                this[this.tableQEquipmentRecord.EquipmentClassIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNominalCurrentNull() {
                return this.IsNull(this.tableQEquipmentRecord.NominalCurrentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNominalCurrentNull() {
                this[this.tableQEquipmentRecord.NominalCurrentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSwitchDriveTypeIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.SwitchDriveTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSwitchDriveTypeIDNull() {
                this[this.tableQEquipmentRecord.SwitchDriveTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBranchNameNull() {
                return this.IsNull(this.tableQEquipmentRecord.BranchNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBranchNameNull() {
                this[this.tableQEquipmentRecord.BranchNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectNameNull() {
                return this.IsNull(this.tableQEquipmentRecord.SubjectNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectNameNull() {
                this[this.tableQEquipmentRecord.SubjectNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubjectIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.SubjectIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubjectIDNull() {
                this[this.tableQEquipmentRecord.SubjectIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBranchIDNull() {
                return this.IsNull(this.tableQEquipmentRecord.BranchIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBranchIDNull() {
                this[this.tableQEquipmentRecord.BranchIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputKindHighANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputKindHighAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputKindHighANull() {
                this[this.tableQEquipmentRecord.InputKindHighAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNameHighANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNameHighAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNameHighANull() {
                this[this.tableQEquipmentRecord.InputNameHighAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputTypeIDHighANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputTypeIDHighAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputTypeIDHighANull() {
                this[this.tableQEquipmentRecord.InputTypeIDHighAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputManufacturerIDHighANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputManufacturerIDHighAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputManufacturerIDHighANull() {
                this[this.tableQEquipmentRecord.InputManufacturerIDHighAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNumberHighANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNumberHighAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNumberHighANull() {
                this[this.tableQEquipmentRecord.InputNumberHighAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputCreateYearHighANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputCreateYearHighAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputCreateYearHighANull() {
                this[this.tableQEquipmentRecord.InputCreateYearHighAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputUseBeginYearHighANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputUseBeginYearHighAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputUseBeginYearHighANull() {
                this[this.tableQEquipmentRecord.InputUseBeginYearHighAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputKindHighBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputKindHighBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputKindHighBNull() {
                this[this.tableQEquipmentRecord.InputKindHighBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNameHighBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNameHighBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNameHighBNull() {
                this[this.tableQEquipmentRecord.InputNameHighBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputTypeIDHighBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputTypeIDHighBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputTypeIDHighBNull() {
                this[this.tableQEquipmentRecord.InputTypeIDHighBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputManufacturerIDHighBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputManufacturerIDHighBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputManufacturerIDHighBNull() {
                this[this.tableQEquipmentRecord.InputManufacturerIDHighBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNumberHighBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNumberHighBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNumberHighBNull() {
                this[this.tableQEquipmentRecord.InputNumberHighBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputCreateYearHighBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputCreateYearHighBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputCreateYearHighBNull() {
                this[this.tableQEquipmentRecord.InputCreateYearHighBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputUseBeginYearHighBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputUseBeginYearHighBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputUseBeginYearHighBNull() {
                this[this.tableQEquipmentRecord.InputUseBeginYearHighBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputKindHighCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputKindHighCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputKindHighCNull() {
                this[this.tableQEquipmentRecord.InputKindHighCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNameHighCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNameHighCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNameHighCNull() {
                this[this.tableQEquipmentRecord.InputNameHighCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputTypeIDHighCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputTypeIDHighCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputTypeIDHighCNull() {
                this[this.tableQEquipmentRecord.InputTypeIDHighCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputManufacturerIDHighCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputManufacturerIDHighCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputManufacturerIDHighCNull() {
                this[this.tableQEquipmentRecord.InputManufacturerIDHighCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNumberHighCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNumberHighCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNumberHighCNull() {
                this[this.tableQEquipmentRecord.InputNumberHighCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputCreateYearHighCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputCreateYearHighCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputCreateYearHighCNull() {
                this[this.tableQEquipmentRecord.InputCreateYearHighCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputUseBeginYearHighCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputUseBeginYearHighCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputUseBeginYearHighCNull() {
                this[this.tableQEquipmentRecord.InputUseBeginYearHighCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputKindMiddleANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputKindMiddleAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputKindMiddleANull() {
                this[this.tableQEquipmentRecord.InputKindMiddleAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNameMiddleANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNameMiddleAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNameMiddleANull() {
                this[this.tableQEquipmentRecord.InputNameMiddleAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputTypeIDMiddleANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputTypeIDMiddleAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputTypeIDMiddleANull() {
                this[this.tableQEquipmentRecord.InputTypeIDMiddleAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputManufacturerIDMiddleANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputManufacturerIDMiddleAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputManufacturerIDMiddleANull() {
                this[this.tableQEquipmentRecord.InputManufacturerIDMiddleAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNumberMiddleANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNumberMiddleAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNumberMiddleANull() {
                this[this.tableQEquipmentRecord.InputNumberMiddleAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputCreateYearMiddleANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputCreateYearMiddleAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputCreateYearMiddleANull() {
                this[this.tableQEquipmentRecord.InputCreateYearMiddleAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputUseBeginYearMiddleANull() {
                return this.IsNull(this.tableQEquipmentRecord.InputUseBeginYearMiddleAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputUseBeginYearMiddleANull() {
                this[this.tableQEquipmentRecord.InputUseBeginYearMiddleAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputKindMiddleBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputKindMiddleBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputKindMiddleBNull() {
                this[this.tableQEquipmentRecord.InputKindMiddleBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNameMiddleBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNameMiddleBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNameMiddleBNull() {
                this[this.tableQEquipmentRecord.InputNameMiddleBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputTypeIDMiddleBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputTypeIDMiddleBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputTypeIDMiddleBNull() {
                this[this.tableQEquipmentRecord.InputTypeIDMiddleBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputManufacturerIDMiddleBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputManufacturerIDMiddleBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputManufacturerIDMiddleBNull() {
                this[this.tableQEquipmentRecord.InputManufacturerIDMiddleBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNumberMiddleBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNumberMiddleBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNumberMiddleBNull() {
                this[this.tableQEquipmentRecord.InputNumberMiddleBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputCreateYearMiddleBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputCreateYearMiddleBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputCreateYearMiddleBNull() {
                this[this.tableQEquipmentRecord.InputCreateYearMiddleBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputUseBeginYearMiddleBNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputUseBeginYearMiddleBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputUseBeginYearMiddleBNull() {
                this[this.tableQEquipmentRecord.InputUseBeginYearMiddleBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputKindMiddleCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputKindMiddleCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputKindMiddleCNull() {
                this[this.tableQEquipmentRecord.InputKindMiddleCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNameMiddleCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNameMiddleCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNameMiddleCNull() {
                this[this.tableQEquipmentRecord.InputNameMiddleCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputTypeIDMiddleCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputTypeIDMiddleCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputTypeIDMiddleCNull() {
                this[this.tableQEquipmentRecord.InputTypeIDMiddleCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputManufacturerIDMiddleCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputManufacturerIDMiddleCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputManufacturerIDMiddleCNull() {
                this[this.tableQEquipmentRecord.InputManufacturerIDMiddleCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNumberMiddleCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNumberMiddleCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNumberMiddleCNull() {
                this[this.tableQEquipmentRecord.InputNumberMiddleCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputCreateYearMiddleCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputCreateYearMiddleCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputCreateYearMiddleCNull() {
                this[this.tableQEquipmentRecord.InputCreateYearMiddleCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputUseBeginYearMiddleCNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputUseBeginYearMiddleCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputUseBeginYearMiddleCNull() {
                this[this.tableQEquipmentRecord.InputUseBeginYearMiddleCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputKindNeutralNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputKindNeutralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputKindNeutralNull() {
                this[this.tableQEquipmentRecord.InputKindNeutralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNameNeutralNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNameNeutralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNameNeutralNull() {
                this[this.tableQEquipmentRecord.InputNameNeutralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputTypeIDNeutralNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputTypeIDNeutralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputTypeIDNeutralNull() {
                this[this.tableQEquipmentRecord.InputTypeIDNeutralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputManufacturerIDNeutralNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputManufacturerIDNeutralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputManufacturerIDNeutralNull() {
                this[this.tableQEquipmentRecord.InputManufacturerIDNeutralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputNumberNeutralNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputNumberNeutralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputNumberNeutralNull() {
                this[this.tableQEquipmentRecord.InputNumberNeutralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputCreateYearNeutralNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputCreateYearNeutralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputCreateYearNeutralNull() {
                this[this.tableQEquipmentRecord.InputCreateYearNeutralColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInputUseBeginYearNeutralNull() {
                return this.IsNull(this.tableQEquipmentRecord.InputUseBeginYearNeutralColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInputUseBeginYearNeutralNull() {
                this[this.tableQEquipmentRecord.InputUseBeginYearNeutralColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class QEquipmentRecordRowChangeEvent : global::System.EventArgs {
            
            private QEquipmentRecordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QEquipmentRecordRowChangeEvent(QEquipmentRecordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public QEquipmentRecordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DiarMain.DataSetQuery2TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QEquipmentRecordTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SQLite.SQLiteDataAdapter _adapter;
        
        private global::System.Data.SQLite.SQLiteConnection _connection;
        
        private global::System.Data.SQLite.SQLiteTransaction _transaction;
        
        private global::System.Data.SQLite.SQLiteCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public QEquipmentRecordTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SQLite.SQLiteDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SQLite.SQLiteCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SQLite.SQLiteTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SQLite.SQLiteCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SQLite.SQLiteDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "QEquipmentRecord";
            tableMapping.ColumnMappings.Add("EquipmentID", "EquipmentID");
            tableMapping.ColumnMappings.Add("SubstationID", "SubstationID");
            tableMapping.ColumnMappings.Add("EquipmentKindID", "EquipmentKindID");
            tableMapping.ColumnMappings.Add("EquipmentTypeID", "EquipmentTypeID");
            tableMapping.ColumnMappings.Add("ManufacturerID", "ManufacturerID");
            tableMapping.ColumnMappings.Add("ConstructionType", "ConstructionType");
            tableMapping.ColumnMappings.Add("CoolingSystemTypeID", "CoolingSystemTypeID");
            tableMapping.ColumnMappings.Add("EquipmentName", "EquipmentName");
            tableMapping.ColumnMappings.Add("EquipmentNumber", "EquipmentNumber");
            tableMapping.ColumnMappings.Add("CreateYear", "CreateYear");
            tableMapping.ColumnMappings.Add("UseBeginYear", "UseBeginYear");
            tableMapping.ColumnMappings.Add("NominalVoltageLow", "NominalVoltageLow");
            tableMapping.ColumnMappings.Add("NominalVoltageMiddle", "NominalVoltageMiddle");
            tableMapping.ColumnMappings.Add("NominalVoltageHigh", "NominalVoltageHigh");
            tableMapping.ColumnMappings.Add("NominalVoltageNeitral", "NominalVoltageNeitral");
            tableMapping.ColumnMappings.Add("NominalPower", "NominalPower");
            tableMapping.ColumnMappings.Add("ProjectLifeTime", "ProjectLifeTime");
            tableMapping.ColumnMappings.Add("ActualLifeTime", "ActualLifeTime");
            tableMapping.ColumnMappings.Add("LastWorkoverYear", "LastWorkoverYear");
            tableMapping.ColumnMappings.Add("LastTechnicalServiceYear", "LastTechnicalServiceYear");
            tableMapping.ColumnMappings.Add("TechnicalServiceDocument", "TechnicalServiceDocument");
            tableMapping.ColumnMappings.Add("TechnicalServiceConclusion", "TechnicalServiceConclusion");
            tableMapping.ColumnMappings.Add("NextTechnicalServiceYear", "NextTechnicalServiceYear");
            tableMapping.ColumnMappings.Add("TechnicalServiceCount", "TechnicalServiceCount");
            tableMapping.ColumnMappings.Add("EquipmentNote", "EquipmentNote");
            tableMapping.ColumnMappings.Add("ReadOnly", "ReadOnly");
            tableMapping.ColumnMappings.Add("ProtectionOilTypeID", "ProtectionOilTypeID");
            tableMapping.ColumnMappings.Add("InputIDHighA", "InputIDHighA");
            tableMapping.ColumnMappings.Add("InputIDHighB", "InputIDHighB");
            tableMapping.ColumnMappings.Add("InputIDHighC", "InputIDHighC");
            tableMapping.ColumnMappings.Add("InputIDMiddleA", "InputIDMiddleA");
            tableMapping.ColumnMappings.Add("InputIDMiddleB", "InputIDMiddleB");
            tableMapping.ColumnMappings.Add("InputIDMiddleC", "InputIDMiddleC");
            tableMapping.ColumnMappings.Add("InputIDNeutral", "InputIDNeutral");
            tableMapping.ColumnMappings.Add("RPNCnt", "RPNCnt");
            tableMapping.ColumnMappings.Add("RPNVoltage", "RPNVoltage");
            tableMapping.ColumnMappings.Add("RPNTypeID", "RPNTypeID");
            tableMapping.ColumnMappings.Add("RPNKind", "RPNKind");
            tableMapping.ColumnMappings.Add("RPNNumber", "RPNNumber");
            tableMapping.ColumnMappings.Add("RPNNumber2", "RPNNumber2");
            tableMapping.ColumnMappings.Add("RPNNumber3", "RPNNumber3");
            tableMapping.ColumnMappings.Add("Image", "Image");
            tableMapping.ColumnMappings.Add("EquipmentClassID", "EquipmentClassID");
            tableMapping.ColumnMappings.Add("NominalCurrent", "NominalCurrent");
            tableMapping.ColumnMappings.Add("SwitchDriveTypeID", "SwitchDriveTypeID");
            tableMapping.ColumnMappings.Add("BranchName", "BranchName");
            tableMapping.ColumnMappings.Add("SubjectName", "SubjectName");
            tableMapping.ColumnMappings.Add("SubjectID", "SubjectID");
            tableMapping.ColumnMappings.Add("BranchID", "BranchID");
            tableMapping.ColumnMappings.Add("InputKindHighA", "InputKindHighA");
            tableMapping.ColumnMappings.Add("InputNameHighA", "InputNameHighA");
            tableMapping.ColumnMappings.Add("InputTypeIDHighA", "InputTypeIDHighA");
            tableMapping.ColumnMappings.Add("InputManufacturerIDHighA", "InputManufacturerIDHighA");
            tableMapping.ColumnMappings.Add("InputNumberHighA", "InputNumberHighA");
            tableMapping.ColumnMappings.Add("InputCreateYearHighA", "InputCreateYearHighA");
            tableMapping.ColumnMappings.Add("InputUseBeginYearHighA", "InputUseBeginYearHighA");
            tableMapping.ColumnMappings.Add("InputKindHighB", "InputKindHighB");
            tableMapping.ColumnMappings.Add("InputNameHighB", "InputNameHighB");
            tableMapping.ColumnMappings.Add("InputTypeIDHighB", "InputTypeIDHighB");
            tableMapping.ColumnMappings.Add("InputManufacturerIDHighB", "InputManufacturerIDHighB");
            tableMapping.ColumnMappings.Add("InputNumberHighB", "InputNumberHighB");
            tableMapping.ColumnMappings.Add("InputCreateYearHighB", "InputCreateYearHighB");
            tableMapping.ColumnMappings.Add("InputUseBeginYearHighB", "InputUseBeginYearHighB");
            tableMapping.ColumnMappings.Add("InputKindHighC", "InputKindHighC");
            tableMapping.ColumnMappings.Add("InputNameHighC", "InputNameHighC");
            tableMapping.ColumnMappings.Add("InputTypeIDHighC", "InputTypeIDHighC");
            tableMapping.ColumnMappings.Add("InputManufacturerIDHighC", "InputManufacturerIDHighC");
            tableMapping.ColumnMappings.Add("InputNumberHighC", "InputNumberHighC");
            tableMapping.ColumnMappings.Add("InputCreateYearHighC", "InputCreateYearHighC");
            tableMapping.ColumnMappings.Add("InputUseBeginYearHighC", "InputUseBeginYearHighC");
            tableMapping.ColumnMappings.Add("InputKindMiddleA", "InputKindMiddleA");
            tableMapping.ColumnMappings.Add("InputNameMiddleA", "InputNameMiddleA");
            tableMapping.ColumnMappings.Add("InputTypeIDMiddleA", "InputTypeIDMiddleA");
            tableMapping.ColumnMappings.Add("InputManufacturerIDMiddleA", "InputManufacturerIDMiddleA");
            tableMapping.ColumnMappings.Add("InputNumberMiddleA", "InputNumberMiddleA");
            tableMapping.ColumnMappings.Add("InputCreateYearMiddleA", "InputCreateYearMiddleA");
            tableMapping.ColumnMappings.Add("InputUseBeginYearMiddleA", "InputUseBeginYearMiddleA");
            tableMapping.ColumnMappings.Add("InputKindMiddleB", "InputKindMiddleB");
            tableMapping.ColumnMappings.Add("InputNameMiddleB", "InputNameMiddleB");
            tableMapping.ColumnMappings.Add("InputTypeIDMiddleB", "InputTypeIDMiddleB");
            tableMapping.ColumnMappings.Add("InputManufacturerIDMiddleB", "InputManufacturerIDMiddleB");
            tableMapping.ColumnMappings.Add("InputNumberMiddleB", "InputNumberMiddleB");
            tableMapping.ColumnMappings.Add("InputCreateYearMiddleB", "InputCreateYearMiddleB");
            tableMapping.ColumnMappings.Add("InputUseBeginYearMiddleB", "InputUseBeginYearMiddleB");
            tableMapping.ColumnMappings.Add("InputKindMiddleC", "InputKindMiddleC");
            tableMapping.ColumnMappings.Add("InputNameMiddleC", "InputNameMiddleC");
            tableMapping.ColumnMappings.Add("InputTypeIDMiddleC", "InputTypeIDMiddleC");
            tableMapping.ColumnMappings.Add("InputManufacturerIDMiddleC", "InputManufacturerIDMiddleC");
            tableMapping.ColumnMappings.Add("InputNumberMiddleC", "InputNumberMiddleC");
            tableMapping.ColumnMappings.Add("InputCreateYearMiddleC", "InputCreateYearMiddleC");
            tableMapping.ColumnMappings.Add("InputUseBeginYearMiddleC", "InputUseBeginYearMiddleC");
            tableMapping.ColumnMappings.Add("InputKindNeutral", "InputKindNeutral");
            tableMapping.ColumnMappings.Add("InputNameNeutral", "InputNameNeutral");
            tableMapping.ColumnMappings.Add("InputTypeIDNeutral", "InputTypeIDNeutral");
            tableMapping.ColumnMappings.Add("InputManufacturerIDNeutral", "InputManufacturerIDNeutral");
            tableMapping.ColumnMappings.Add("InputNumberNeutral", "InputNumberNeutral");
            tableMapping.ColumnMappings.Add("InputCreateYearNeutral", "InputCreateYearNeutral");
            tableMapping.ColumnMappings.Add("InputUseBeginYearNeutral", "InputUseBeginYearNeutral");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SQLite.SQLiteConnection();
            this._connection.ConnectionString = global::DiarMain.Properties.Settings.Default.diarConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SQLite.SQLiteCommand[1];
            this._commandCollection[0] = new global::System.Data.SQLite.SQLiteCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Equipments.*, Branches.BranchName, Subjects.SubjectName, Branches.Subj" +
                "ectID, Substations.BranchID, \r\n                      ihA.InputKind AS InputKindH" +
                "ighA, ihA.InputName AS InputNameHighA, ihA.InputTypeID AS InputTypeIDHighA, ihA." +
                "InputManufacturerID AS InputManufacturerIDHighA, \r\n                      ihA.Inp" +
                "utNumber AS InputNumberHighA, ihA.InputCreateYear AS InputCreateYearHighA, ihA.I" +
                "nputUseBeginYear AS InputUseBeginYearHighA, \r\n                      ihB.InputKin" +
                "d AS InputKindHighB, ihB.InputName AS InputNameHighB, ihB.InputTypeID AS InputTy" +
                "peIDHighB, ihB.InputManufacturerID AS InputManufacturerIDHighB, \r\n              " +
                "        ihB.InputNumber AS InputNumberHighB, ihB.InputCreateYear AS InputCreateY" +
                "earHighB, ihB.InputUseBeginYear AS InputUseBeginYearHighB, \r\n                   " +
                "   ihC.InputKind AS InputKindHighC, ihC.InputName AS InputNameHighC, ihC.InputTy" +
                "peID AS InputTypeIDHighC, ihC.InputManufacturerID AS InputManufacturerIDHighC, \r" +
                "\n                      ihC.InputNumber AS InputNumberHighC, ihC.InputCreateYear " +
                "AS InputCreateYearHighC, ihC.InputUseBeginYear AS InputUseBeginYearHighC, \r\n    " +
                "                  imA.InputKind AS InputKindMiddleA, imA.InputName AS InputNameM" +
                "iddleA, imA.InputTypeID AS InputTypeIDMiddleA, imA.InputManufacturerID AS InputM" +
                "anufacturerIDMiddleA, \r\n                      imA.InputNumber AS InputNumberMidd" +
                "leA, imA.InputCreateYear AS InputCreateYearMiddleA, imA.InputUseBeginYear AS Inp" +
                "utUseBeginYearMiddleA, \r\n                      imB.InputKind AS InputKindMiddleB" +
                ", imB.InputName AS InputNameMiddleB, imB.InputTypeID AS InputTypeIDMiddleB, imB." +
                "InputManufacturerID AS InputManufacturerIDMiddleB, \r\n                      imB.I" +
                "nputNumber AS InputNumberMiddleB, imB.InputCreateYear AS InputCreateYearMiddleB," +
                " imB.InputUseBeginYear AS InputUseBeginYearMiddleB, \r\n                      imC." +
                "InputKind AS InputKindMiddleC, imC.InputName AS InputNameMiddleC, imC.InputTypeI" +
                "D AS InputTypeIDMiddleC, imC.InputManufacturerID AS InputManufacturerIDMiddleC, " +
                "\r\n                      imC.InputNumber AS InputNumberMiddleC, imC.InputCreateYe" +
                "ar AS InputCreateYearMiddleC, imC.InputUseBeginYear AS InputUseBeginYearMiddleC," +
                " \r\n                      iNN.InputKind AS InputKindNeutral, iNN.InputName AS Inp" +
                "utNameNeutral, iNN.InputTypeID AS InputTypeIDNeutral, iNN.InputManufacturerID AS" +
                " InputManufacturerIDNeutral, \r\n                      iNN.InputNumber AS InputNum" +
                "berNeutral, iNN.InputCreateYear AS InputCreateYearNeutral, \r\n                   " +
                "   iNN.InputUseBeginYear AS InputUseBeginYearNeutral\r\nFROM         Equipments IN" +
                "NER JOIN\r\n                      Substations ON Substations.SubstationID = Equipm" +
                "ents.SubstationID INNER JOIN\r\n                      Branches ON Branches.BranchI" +
                "D = Substations.BranchID INNER JOIN\r\n                      Subjects ON Branches." +
                "SubjectID = Subjects.SubjectID LEFT OUTER JOIN\r\n                      Inputs ihA" +
                " ON ihA.InputID = Equipments.InputIDHighA LEFT OUTER JOIN\r\n                     " +
                " Inputs ihB ON ihB.InputID = Equipments.InputIDHighB LEFT OUTER JOIN\r\n          " +
                "            Inputs ihC ON ihC.InputID = Equipments.InputIDHighC LEFT OUTER JOIN\r" +
                "\n                      Inputs imA ON imA.InputID = Equipments.InputIDMiddleA LEF" +
                "T OUTER JOIN\r\n                      Inputs imB ON imB.InputID = Equipments.Input" +
                "IDMiddleB LEFT OUTER JOIN\r\n                      Inputs imC ON imC.InputID = Equ" +
                "ipments.InputIDMiddleC LEFT OUTER JOIN\r\n                      Inputs iNN ON iNN." +
                "InputID = Equipments.InputIDNeutral\r\nWHERE     (Equipments.EquipmentID = @Param1" +
                ")";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            global::System.Data.SQLite.SQLiteParameter param = new global::System.Data.SQLite.SQLiteParameter();
            param.ParameterName = "@Param1";
            param.DbType = global::System.Data.DbType.Int64;
            param.DbType = global::System.Data.DbType.Int64;
            param.Size = 8;
            param.SourceColumn = "EquipmentID";
            this._commandCollection[0].Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetQuery2.QEquipmentRecordDataTable dataTable, long Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(Param1));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetQuery2.QEquipmentRecordDataTable GetData(long Param1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((long)(Param1));
            DataSetQuery2.QEquipmentRecordDataTable dataTable = new DataSetQuery2.QEquipmentRecordDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSetQuery2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSetQuery2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSetQuery2 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSetQuery2 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591